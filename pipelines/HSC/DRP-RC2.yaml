description: The DRP pipeline specialized for the HSC RC2 dataset.
instrument: lsst.obs.subaru.HyperSuprimeCam
imports:
  - $DRP_PIPE_DIR/pipelines/_ingredients/HSC/DRP.yaml
tasks:
  fgcmBuildFromIsolatedStars:
    class: lsst.fgcmcal.fgcmBuildFromIsolatedStars.FgcmBuildFromIsolatedStarsTask
    config:
      minPerBand: 1
      densityCutMaxPerPixel: 1500
      primaryBands: ["i", "r", "g", "z", "y", "N921"]
      doReferenceMatches: true
      randomSeed: 23456
  fgcmFitCycle:
    class: lsst.fgcmcal.fgcmFitCycle.FgcmFitCycleTask
    config:
      multipleCyclesFinalCycleNumber: 4
      randomSeed: 89234
      outfileBase: "fgcmFitCycleRC2"
      bands: ["g", "r", "i", "z", "N921", "y"]
      fitBands: ["g", "r", "i", "z", "N921", "y"]
      maxIterBeforeFinalCycle: 50
      expGrayPhotometricCutDict:
        g: -0.05
        r: -0.05
        i: -0.05
        z: -0.05
        N921: -0.05
        y: -0.05
      expGrayHighCutDict:
        g: 0.10
        r: 0.10
        i: 0.10
        z: 0.10
        N921: 0.10
        y: 0.10
      aperCorrFitNBins: 0
      minStarPerExp: 100
      expVarGrayPhotometricCutDict:
        g: 0.0025
        r: 0.0025
        i: 0.0025
        z: 0.0025
        N921: 0.005
        y: 0.0025
      minExpPerNight: 3
      deltaAperInnerRadiusArcsec: 2.04
      deltaAperOuterRadiusArcsec: 2.89
      python: |
        from lsst.fgcmcal import Sedterm, Sedboundaryterm
        config.sedboundaryterms.data = {'gr': Sedboundaryterm(primary='g', secondary='r'),
                                        'ri': Sedboundaryterm(primary='r', secondary='i'),
                                        'iz': Sedboundaryterm(primary='i', secondary='z'),
                                        'zy': Sedboundaryterm(primary='z', secondary='y'),
                                        'N921z': Sedboundaryterm(primary='N921', secondary='z')}
        config.sedterms.data = {'g': Sedterm(primaryTerm='gr', secondaryTerm='ri', constant=1.6),
                                'r': Sedterm(primaryTerm='gr', secondaryTerm='ri', constant=0.9),
                                'i': Sedterm(primaryTerm='ri', secondaryTerm='iz', constant=1.0),
                                'z': Sedterm(primaryTerm='iz', secondaryTerm='zy', constant=1.0),
                                'y': Sedterm(primaryTerm='zy', secondaryTerm='iz', constant=0.25,
                                             extrapolated=True, primaryBand='y', secondaryBand='z',
                                             tertiaryBand='i'),
                                'N921': Sedterm(primaryTerm='N921z', constant=0.5)}
  fgcmOutputProducts:
    class: lsst.fgcmcal.fgcmOutputProducts.FgcmOutputProductsTask
    config:
      connections.cycleNumber: 4
  matchedVisitCoreWholeSkyPlot:
    class: lsst.analysis.tools.tasks.WholeSkyAnalysisTask
    config:
      atools.wholeSkyMetric.bands: ["g", "r", "i", "z", "y"]
  objectTableCoreWholeSkyPlot:
    class: lsst.analysis.tools.tasks.WholeSkyAnalysisTask
    config:
      atools.wholeSkyMetric.bands: ["g", "r", "i", "z", "y"]
  objectTableCoreRefCatMatchWholeSkyPlot:
    class: lsst.analysis.tools.tasks.WholeSkyAnalysisTask
    config:
      atools.wholeSkyMetric.bands: ["g", "r", "i", "z", "y"]
subsets:
  step1:
    subset:
      - isr
      - characterizeImage
      - calibrate
      - writePreSourceTable
      - transformPreSourceTable
      - analyzeAmpOffsetMetadata
      - analyzeCalibrateMetadata
    description: |
      Per-detector tasks that can be run together to start the DRP pipeline.

      These should never be run with 'tract' or 'patch' as part of the data ID
      expression if any later steps will also be run, because downstream steps
      require full visits and 'tract' and 'patch' constraints will always
      select partial visits that overlap that region.
  step2a:
    subset:
      - consolidatePreSourceTable
      - consolidateVisitSummary
      - skyCorr
      - isolatedStarAssociation
    description: |
      Global tasks: This is a mix of visit-level and tract-level tasks that
      must be run with a skymap data query constraint only (an instrument
      constraint is fine, but generally unneccessary).  For example, running
      with 'tract' (and 'patch') constraints will select partial visits that
      overlap that region.  A skymap constraint is necessary to prevent
      isolatedStarAssociation from producing results for all skymaps in the
      data repository. This only works with small to medium jobs.  Use DRP-Prod
      for large production subsets.

      skyCorr requires full visits, and 'tract' and 'patch'
      constraints will always select partial visits that overlap that region.

      Visit-level: consolidatePreSourceTable, consolidateVisitSummary,
      skyCorr
      Tract-level: isolatedStarAssociation
  step2b:
    subset:
      - gbdesAstrometricFit
    description: |
      Per-tract steps that must be run after step2a.

      These should be run with explicit 'tract' constraints essentially all the
      time, because otherwise quanta will be created for jobs with only partial
      visit coverage.

      This subset is considered a workaround for missing middleware and task
      functionality.  It may be removed in the future.
  step2cde:
    subset:
      - finalizeCharacterization
      - fgcmBuildFromIsolatedStars
      - fgcmFitCycle
      - fgcmOutputProducts
      - updateVisitSummary
      - reprocessVisitImage
      - writeRecalibratedSourceTable
      - transformSourceTable
      - consolidateSourceTable
      - catalogMatchVisit
      - astrometricRefCatSourceVisit
      - makeCcdVisitTable
      - makeVisitTable
    description: |
      Per-detector, Per-visit, and per-collection tasks that can be run
      together after step2b with no data query constraints other than
      instrument.

      FGCM requires full visits and 'tract' and 'patch' constraints will
      always select partial visits that overlap that region.

      This includes FGCM because it's configured here to run in "global" mode,
      which means one should not use a 'tract' expression to constrain it, and
      if one _did_ run it with a tract constraint (which would be a common
      occurrence if it was included in any later step), it would be fed the
      wrong (partial-visit) inputs to its 'background' connection.
  step3:
    subset:
      # per-patch Tasks
      - makeWarp
      - selectDeepCoaddVisits
      - assembleCoadd
      - detection
      - mergeDetections
      - deblend
      - measure
      - mergeMeasurements
      - forcedPhotCoadd
      - transformObjectTable
      - writeObjectTable
      - healSparsePropertyMaps
      - selectGoodSeeingVisits
      - templateGen
      - fitDeepCoaddPsfGaussians
      - fitDeblendedObjectsSersic
      # per-tract Tasks
      - consolidateObjectTable
      - analyzeMatchedVisitCore
      - isolatedStarSourceAssociation
      - analyzeMatchedPreVisitCore
      - analyzeObjectTableCore
      - catalogMatchTract
      - photometricCatalogMatch
      - photometricRefCatObjectTract
      - plotPropertyMapTract
      - refCatObjectTract
      - validateObjectTableCore
      - objectEpochTable
      - mergeMultiprofit
      - analyzeMultiprofitCore
    description: |
      Tasks that can be run together, but only after the 'step1' and 'step2'
      subsets.

      These should be run with explicit 'tract' constraints essentially all the
      time, because otherwise quanta will be created for jobs with only partial
      visit coverage.

      This subset is considered a workaround for missing middleware and task
      functionality.  It may be removed in the future.
  step4:
    subset:
      - forcedPhotCcd
      - forcedPhotDiffim
      - getTemplate
      - subtractImages
      - detectAndMeasureDiaSources
      - transformDiaSourceCat
      - writeForcedSourceTable
    description: |
      Tasks that can be run together, but only after the 'step1', 'step2' and
      'step3' subsets

      These detector-level tasks should not be run with 'tract' or 'patch' as
      part of the data ID expression if all reference catalogs or diffIm
      templates that cover these detector-level quanta are desired.
  step5:
    subset:
      - drpAssociation
      - drpDiaCalculation
      - forcedPhotCcdOnDiaObjects
      - forcedPhotDiffOnDiaObjects
      - transformForcedSourceTable
      - consolidateForcedSourceTable
      - consolidateAssocDiaSourceTable
      - consolidateFullDiaObjectTable
      - writeForcedSourceOnDiaObjectTable
      - transformForcedSourceOnDiaObjectTable
      - consolidateForcedSourceOnDiaObjectTable
    description: |
      Tasks that can be run together, but only after the 'step1', 'step2',
      'step3', and 'step4' subsets

      This step includes patch-level aggregation Tasks. These should be run
      with explicit 'tract' constraints in the data query, otherwise quanta
      will be created for jobs with only partial visit coverage.
      'consolidateForcedSourceTable' is a tract-level task that aggregates
      patches and should be rerun if any of the patches fail.
  step6:
    subset:
      - consolidateDiaSourceTable
      - sourceObjectMatch
    description: |
      Tasks that can be run together, but only after the 'step1', 'step2',
      'step3', and 'step4', 'step5' subsets

      This step includes visit-level aggregation tasks. Running without tract
      or patch in the data query is recommended, otherwise the outputs of
      consolidateDiaSourceTable, and consolidateSourceTable
      will not contain complete visits.

      This subset is separate from step4 to signal to operators to pause to
      assess unexpected image differencing failures before these aggregation
      steps. Otherwise, if run in the same quantum graph, aggregated data
      products (e.g. diaObjects) would not be created if one or more of the
      expected inputs is missing.
  step7:
    subset:
      - consolidateHealSparsePropertyMaps
      - matchedVisitCoreWholeSkyPlot
      - objectTableCoreWholeSkyPlot
      - makeMetricTableMatchedVisitCore
      - makeMetricTableObjectTableCore
      - makeMetricTableObjectTableCoreRefCatMatch
      - objectTableCoreRefCatMatchWholeSkyPlot
      - analyzeObjectTableSurveyCore
    description: |
      Tasks that should be run as the final step that require global inputs,
      and can be run after the 'step3' subset.

      This step has global aggregation tasks to run over all visits, detectors,
      tracts, etc.  This step should be run only with the instrument constraint
      in the data query.
