description: |
    A fast pipeline to be run on the rapid analysis framework at
    the summit which feeds RubinTV for realtime observer feedback
instrument: lsst.obs.lsst.LsstComCamSim
imports:
  - $DRP_PIPE_DIR/pipelines/_ingredients/LSSTComCamSim/DRP.yaml
    exclude:
      - characterizeImage
      - calibrate
      - writePreSourceTable
      - transformPreSourceTable
tasks:
  isr:
    class: lsst.ip.isr.IsrTask
    config:
      # Turn off slow steps in ISR
      doBrighterFatter: false
  calibrateImage:
    class: lsst.pipe.tasks.calibrateImage.CalibrateImageTask
    config:
      python: |
        config.star_measurement.plugins["base_CircularApertureFlux"].radii = [3.0, 6.0, 9.0, 12.0, 17.0, 25.0, 35.0, 50.0, 70.0]
        config.star_measurement.plugins.names |=  ['base_LocalBackground']
  transformInitialStars:
    class: lsst.pipe.tasks.postprocess.TransformSourceTableTask
    config:
      fromAstropy: true
      connections.inputCatalog: initial_stars_detector
      connections.outputCatalog: preSourceTable
      python: >
        config.functorFile = os.path.join('$PIPE_TASKS_DIR', 'schemas', 'PreSource.yaml')
  consolidateVisitSummary:
      class: lsst.pipe.tasks.postprocess.ConsolidateVisitSummaryTask
      config:
        calexp: initial_pvi
  writeRecalibratedSourceTable:
    class: lsst.pipe.tasks.postprocess.WriteRecalibratedSourceTableTask
    config:
      connections.outputCatalog: source
      connections.catalog: initial_stars_detector
      fromAstropy: True
  characterizeImage:
    class: lsst.pipe.tasks.characterizeImage.CharacterizeImageTask
    config:
      doApCorr: false
      doDeblend: false
  calibrate:
    class: lsst.pipe.tasks.calibrate.CalibrateTask
    config:
      python: |
          config.measurement.plugins.names = ['base_CircularApertureFlux',
                                              'base_PsfFlux',
                                              'base_CompensatedGaussianFlux',
                                              'base_LocalBackground',
                                              'base_SdssCentroid',
                                              'base_SdssShape',
                                              'base_Variance',
                                              'base_Jacobian',
                                              'base_PixelFlags',
                                              'base_GaussianFlux',
                                              'base_SkyCoord',
                                              'base_FPPosition',
                                              'base_ClassificationSizeExtendedness',
                                              ]
          config.measurement.slots.shape = "base_SdssShape"
          config.measurement.slots.psfShape = "base_SdssShape_psf"
          config.measurement.plugins['base_PixelFlags'].masksFpAnywhere.remove('STREAK')
          config.measurement.plugins['base_PixelFlags'].masksFpCenter.remove('STREAK')
          config.doApCorr = False
          config.doDeblend = False
          config.astrometry.sourceSelector["science"].doRequirePrimary = False
          config.astrometry.sourceSelector["science"].doIsolated = False
      # TO DO: DM-41189 Get pipeline that will attach an atool here from lauren
subsets:
  step1:
    subset:
      - isr
      - calibrateImage
      - transformInitialStars
    description: |
      Per-detector tasks that can be run together
  step2a:
    subset:
      - consolidateVisitSummary
      - consolidatePreSourceTable
  nightlyRollup:
    # can be run at end of night or on a timer
    # Need to either clobber OR use a chained collection of timestamped runs
    subset:
      - makePreliminaryCcdVisitTable
      - makePreliminaryVisitTable
      - preliminaryVisitCoverageAnalysis
    description: |
      Global-level tasks
