description: DRP specialized for LATISS surveys
instrument: lsst.obs.lsst.Latiss
imports:
  - location: $DRP_PIPE_DIR/pipelines/_ingredients/DRP.yaml
    labeledSubsetModifyMode: EDIT
    exclude:
      - analysis_drp_plots
      - multiprofit_fit_standard
      # TODO[DM-47010]: exclusion is historical, possibly unintentional
      - step7
      - matchedVisitQualityCore
      - visitQualityCore
      - wholeSkyCore
      - diaTractQualityCore.yaml

tasks:
  fgcmFitCycle:
    class: lsst.fgcmcal.fgcmFitCycle.FgcmFitCycleTask
    config:
      doMultipleCycles: true
      multipleCyclesFinalCycleNumber: 6

  fgcmOutputProducts:
    class: lsst.fgcmcal.fgcmOutputProducts.FgcmOutputProductsTask
    config:
      connections.cycleNumber: 6

  updateVisitSummary:
    class: lsst.drp.tasks.update_visit_summary.UpdateVisitSummaryTask
    config:
      wcs_provider: "input_summary"

  selectDeepCoaddVisits:
    class: lsst.pipe.tasks.selectImages.BestSeeingSelectVisitsTask
    config:
      # This is the maximum seeing that can be used with the default 71 pixel
      # psf kernel size.
      maxPsfFwhm: 1.9

  # Defining analyzeObjectTableCore here to omit plots that require z and/or
  # y band data.
  analyzeObjectTableCore:
    class: lsst.analysis.tools.tasks.ObjectTableTractAnalysisTask
    config:
      connections.outputName: objectTableCore
      atools.shapeSizeFractionalDiff: ShapeSizeFractionalDiffScatter
      atools.e1Diff: E1DiffScatter
      atools.e2Diff: E2DiffScatter
      atools.skyFluxStatisticMetric: SkyFluxStatisticMetric
      atools.skyFluxStatisticMetric.applyContext: CoaddContext
      atools.wPerpPSFP: WPerpPSF
      atools.wPerpCModel: WPerpCModel
      atools.xPerpPSFP: XPerpPSF
      atools.xPerpCModel: XPerpCModel
      atools.skyObjectSky: SkyObjectSkyPlot
      atools.skyObjectFlux: SkyObjectHistPlot
      python: |
        from lsst.analysis.tools.atools import *
        from lsst.analysis.tools.contexts import *

  photometricCatalogMatch:
    class: lsst.analysis.tools.tasks.photometricCatalogMatch.PhotometricCatalogMatchTask
    config:
      connections.refCatalog: atlas_refcat2_20220201

  photometricRefCatObjectTract:
    class: lsst.analysis.tools.tasks.refCatObjectPhotometricAnalysis.RefCatObjectPhotometricAnalysisTask
    config:
      connections.refCatalog: atlas_refcat2_20220201
      connections.outputName: objectTable_tract_atlas_refcat2_20220201_match_photom

  # Defining analyzematchedVisitCore here to change the nBins config and omit
  # plots currently not relevant for LATISS imaging.
  analyzeMatchedVisitCore:
    class: lsst.analysis.tools.tasks.AssociatedSourcesTractAnalysisTask
    config:
      connections.outputName: matchedVisitCore
      atools.stellarPhotometricRepeatability: StellarPhotometricRepeatability
      atools.stellarPhotometricResiduals: StellarPhotometricResidualsFocalPlane
      atools.stellarPhotometricResiduals.produce.plot.nBins: 80
      atools.stellarAstrometricResidualsRA: StellarAstrometricResidualsRAFocalPlanePlot
      atools.stellarAstrometricResidualsRA.produce.nBins: 80
      atools.stellarAstrometricResidualsDec: StellarAstrometricResidualsDecFocalPlanePlot
      atools.stellarAstrometricResidualsDec.produce.nBins: 80
      atools.stellarAstrometricResidualStdDevRA: StellarAstrometricResidualStdDevRAFocalPlanePlot
      atools.stellarAstrometricResidualStdDevRA.produce.nBins: 80
      atools.stellarAstrometricResidualStdDevDec: StellarAstrometricResidualStdDevDecFocalPlanePlot
      atools.stellarAstrometricResidualStdDevDec.produce.nBins: 80
      # The following are the AMX metrics: median relative astrometric measurement
      # error on N arc minute scales from single visit images shall be less than
      # this value, where N = 5, 20, 200 arcmin for X = 1, 2, 3, respectivley.
      # Given the current distribution of visits/field, one X = 1 is included for
      # now (the others just pollute the repo with empty plots). The others can/should
      # be added if the observing strategy changes to warrant it.
      atools.stellarAstrometricRepeatability1: AstrometricRelativeRepeatability
      atools.stellarAstrometricRepeatability1.xValue: 1
      atools.stellarAstrometricRepeatability1.process.calculateActions.rms.annulus: 5
      python: |
        from lsst.analysis.tools.atools import *

subsets:
  # step1 is imported.
  step2a:
    subset:
      - consolidatePreSourceTable
      - consolidateVisitSummary
      - isolatedStarAssociation
    description: |
      Global tasks: This is a mix of visit-level and tract-level tasks that
      must be run with a skymap data query constraint only (an instrument
      constraint is fine, but generally unnecessary). For example, running
      with 'tract' (and 'patch') constraints will select partial visits that
      overlap that region. A skymap constraint is necessary to prevent
      isolatedStarAssociation from producing results for all skymaps in the
      data repository.

      Visit-level: consolidatePreSourceTable, consolidateVisitSummary
      Tract-level: isolatedStarAssociation

  step2bcde:
    subset:
      - finalizeCharacterization
      - fgcmBuildFromIsolatedStars
      - fgcmFitCycle
      - fgcmOutputProducts
      - transformSourceTable
      - consolidateSourceTable
      - updateVisitSummary
      - reprocessVisitImage
      - makeCcdVisitTable
      - makeVisitTable
    description: |
      Per-visit and per-collection tasks that can be run together after step2a.
      This step should be run with an instrument and skymap data query
      constraint only.

      FGCM requires full visits and 'tract' and 'patch' constraints will
      always select partial visits that overlap that region.

      This includes FGCM because it's configured here to run in "global" mode,
      which means one should not use a 'tract' expression to constrain it, and
      if one _did_ run it with a tract constraint (which would be a common
      occurrence if it was included in any later step).

  # step3 is imported.
  # step4 is imported.
  # step5 is imported.
  # step6 is imported.