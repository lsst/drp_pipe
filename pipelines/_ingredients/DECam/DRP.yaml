description: |
  The DRP pipeline specialized for the DECam instrument.

  This pipeline should only be run with reference to specific subsets or tasks
  referenced below. Attempting to run the whole pipeline will lead to a
  PrerequisiteInput error, owing to the requirement for crosstalk sources to be
  pre-generated for DECam data processing runs.
instrument: lsst.obs.decam.DarkEnergyCamera
imports:
  - location: $DRP_PIPE_DIR/pipelines/_ingredients/DRP-full.yaml
    exclude:
      - skyCorr
      - fgcm
      - gbdesAstrometricFit
tasks:
  isrForCrosstalkSources:
    class: lsst.ip.isr.IsrTask
    config:
      connections.outputExposure: overscanRaw
      doOverscan: true
      doAssembleCcd: false
      doBias: false
      doCrosstalk: false
      doVariance: false
      doLinearize: false
      doDefect: false
      doNanMasking: false
      doDark: false
      doFlat: false
      doFringe: false
      doInterpolate: false
  isr:
    class: lsst.ip.isr.IsrTask
    config:
      connections.crosstalkSources: overscanRaw
      doCrosstalk: true
  calibrate:
    class: lsst.pipe.tasks.calibrate.CalibrateTask
    config:
      photoCal.match.referenceSelection.magLimit.fluxField: i_flux
      photoCal.match.referenceSelection.magLimit.maximum: 22.0
  updateVisitSummary:
    class: lsst.drp.tasks.update_visit_summary.UpdateVisitSummaryTask
    config:
      photo_calib_provider: "tract"
      background_provider: "input_summary"
      connections.photoCalibName: "jointcal"
      connections.skyWcsName: "jointcal"
  makeWarp:
    class: lsst.pipe.tasks.makeWarp.MakeWarpTask
    config:
      # These configs match obs_subaru, to facilitate 1:1 comparisons between DECam and HSC
      matchingKernelSize: 29
      modelPsf.defaultFwhm: 7.7
      warpAndPsfMatch.warp.warpingKernelName: lanczos5
      coaddPsf.warpingKernelName: lanczos5
      # Legacy DECam config to write out warps, even if they are empty
      doWriteEmptyWarps: true
      python: |
        config.warpAndPsfMatch.psfMatch.kernel['AL'].alardSigGauss = [1.0, 2.0, 4.5]
        from lsst.pipe.tasks.selectImages import PsfWcsSelectImagesTask
        config.select.retarget(PsfWcsSelectImagesTask)
  templateGen:
    class: lsst.pipe.tasks.assembleCoadd.CompareWarpAssembleCoaddTask
    config:
      # These configs match obs_subaru, to facilitate 1:1 comparisons between DECam and HSC
      matchingKernelSize: 29
      # 200 rows (since patch width is typically < 10k pixels
      subregionSize: (10000, 200)
      doNImage: true
      # Saturation trails are usually oriented east-west, so along rows
      interpImage.transpose: true
      coaddPsf.warpingKernelName: lanczos5
      assembleStaticSkyModel.subregionSize: (10000, 200)
      doFilterMorphological: true
      # transmission curves do not exist as-yet for DECam data
      doAttachTransmissionCurve: false
      python: |
        config.removeMaskPlanes.append("CROSSTALK")
        config.badMaskPlanes += ["SUSPECT"]
        from lsst.pipe.tasks.selectImages import PsfWcsSelectImagesTask
        config.select.retarget(PsfWcsSelectImagesTask)
  assembleCoadd:
    class: lsst.pipe.tasks.assembleCoadd.CompareWarpAssembleCoaddTask
    config:
      # These configs match obs_subaru, to facilitate 1:1 comparisons between
      # DECam and HSC
      matchingKernelSize: 29
      # 200 rows (since patch width is typically < 10k pixels
      subregionSize: (10000, 200)
      doNImage: true
      # Saturation trails are usually oriented east-west, so along rows
      interpImage.transpose: true
      coaddPsf.warpingKernelName: lanczos5
      assembleStaticSkyModel.subregionSize: (10000, 200)
      doFilterMorphological: true
      # transmission curves do not exist as-yet for DECam data
      doAttachTransmissionCurve: false
      python: |
        config.removeMaskPlanes.append("CROSSTALK")
        config.badMaskPlanes += ["SUSPECT"]
        from lsst.pipe.tasks.selectImages import PsfWcsSelectImagesTask
        config.select.retarget(PsfWcsSelectImagesTask)
  isolatedStarAssociation:
    class: lsst.pipe.tasks.isolatedStarAssociation.IsolatedStarAssociationTask
    config:
      connections.source_table_visit: preSourceTable_visit
      python:
        config.band_order += ["N708", "N540"]
  writeRecalibratedSourceTable:
    class: lsst.pipe.tasks.postprocess.WriteRecalibratedSourceTableTask
    config:
      connections.outputCatalog: source
  jointcal:
    class: lsst.jointcal.JointcalTask
    config:
      connections.inputSourceTableVisit: preSourceTable_visit
subsets:
  step0:
    subset:
      - isrForCrosstalkSources
    description: |
      Tasks which should be run once, prior to initial data processing.

      This step generates crosstalk sources for ISR/inter-chip crosstalk by
      applying overscan correction on raw frames. A new dataset is written,
      which should be used as an input for further data processing.
  step1:
    subset:
      - isr
      - characterizeImage
      - calibrate
      - transformPreSourceTable
      - writePreSourceTable
    description: |
      Per-detector tasks that can be run together to start the DRP pipeline.

      These should never be run with 'tract' or 'patch' as part of the data ID
      expression if any later steps will also be run, because downstream steps
      require full visits and 'tract' and 'patch' constraints will always
      select partial visits that overlap that region.
  step2a:
    subset:
      - consolidatePreSourceTable
      - consolidateVisitSummary
      - isolatedStarAssociation
    description: |
      Global tasks: This is a mix of visit-level and tract-level tasks that
      must be run with a skymap data query constraint only (an instrument
      constraint is fine, but generally unneccessary).  For example, running
      with 'tract' (and 'patch') constraints will select partial visits that
      overlap that region.  A skymap constraint is necessary to prevent
      isolatedStarAssociation from producing results for all skymaps in the
      data repository. This only works with small to medium jobs.
      The isolatedStarAssociation task uses PreSources, generated by
      consolidatePreSourceTable, for all visits that overlap a tract.

      Visit-level: consolidatePreSourceTable, consolidateVisitSummary
      Tract-level: isolatedStarAssociation
  step2b:
    subset:
      - jointcal
    description: |
      Tract-level tasks
      Allowed data query constraints: tract

      Jointcal uses PreSources, generated by consolidatePreSourceTable,
      for all visits that overlap a tract. It also produces solutions
      per-tract, per-visit.
  step2cde:
    subset:
      - finalizeCharacterization
      - updateVisitSummary
      - makeCcdVisitTable
      - makeVisitTable
    description: |
      Per-visit and per-collection tasks that can be run together after step2b
      with no data query constraints other than instrument.
  step3:
    subset:
      - mergeMeasurements
      - deblend
      - transformObjectTable
      - forcedPhotCoadd
      - healSparsePropertyMaps
      - templateGen
      - consolidateObjectTable
      - detection
      - makeWarp
      - writeObjectTable
      - selectGoodSeeingVisits
      - mergeDetections
      - measure
      - assembleCoadd
    description: |
      Tract-level tasks that can be run together, but only after the 'step1'
      and 'step2' subsets.

      These should be run with explicit 'tract' constraints essentially all the
      time, because otherwise quanta will be created for jobs with only partial
      visit coverage.
  step4:
    subset:
      - writeRecalibratedSourceTable
      - transformSourceTable
    description: |
      Tasks that can be run together, but only after the 'step1', 'step2' and
      'step3' subsets

      These detector-level tasks should not be run with 'tract' or 'patch' as
      part of the data ID expression if all reference catalogs or diffIm
      templates that cover these detector-level quanta are desired.
  # Step 5 is not currently implemented in this DECam DRP processing pipeline.
  step6:
    subset:
      - consolidateSourceTable
    description: |
      Tasks that can be run together, but only after the 'step1', 'step2',
      'step3', and 'step4' subsets.

      This step includes visit-level aggregation tasks. Running without tract
      or patch in the data query is recommended, otherwise the outputs of
      consolidateSourceTable will not contain complete visits.

      This subset is separate from step4 to signal to operators to pause to
      assess unexpected image differencing failures before these aggregation
      steps. Otherwise, if run in the same quantum graph, aggregated data
      products (e.g. sourceTable_visit) would not be created if one or more of
      the expected inputs is missing.
  step7:
    subset:
      - consolidateHealSparsePropertyMaps
    description: |
      Tasks that should be run as the final step that require global inputs,
      and can be run after the 'step3' subset.

      This step has global aggregation tasks to run over all visits, detectors,
      tracts, etc.  This step should be run only with the instrument constraint
      in the data query.
